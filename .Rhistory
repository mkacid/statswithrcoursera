x[1:10]
x[is.na(x)]
y<-[!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
myvector<-1:20
my_vector<1:20
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2<-matrix(1:20,rows=4,col=5)
my_matrix2<-matrix(1:20,byrow=TRUE,col=5)
my_matrix2<-matrix(1:20,byrow=TRUE,ncol=5)
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
colnames(my_data)=cnames
colnames(my_data)<-cnames
my_data
help
exit
swirl()
add2 <- function(x,y){
x+y
}
add2(3,5)
above10<-function(x){
use<-x>10
x[use]
}
above <- function(x,n){
use <- x>n
x[use]
}
x<-1:12
above(x,7)
above <- function(x,n=10){
use <- x>n
x[use]
}
above(x)
columnmean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i]<- mean(x[i])
}
means
}
x<-(1:35,5,7)
x<-matrix(1:35,5,7)
columnmean(x)
x
columnmean <- function(x){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i]<- mean(x[,i])
}
means
}
columnmean(x)
columnmean <- function(x,removeNA = TRUE){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i]<- mean(x[,i],na.rm)
}
means
}
x[1,3]=NA
columnmean(x)
columnmean <- function(x,removeNA = TRUE){
nc <- ncol(x)
means <- numeric(nc)
for(i in 1:nc){
means[i]<- mean(x[,i],na.rm=removeNA)
}
means
}
columnmean(x)
x<-5
x
print(x)
msg<-"hello"
msg
x<- 1:20
x
y<-(1.7,'a')
y<-(1.7,"a")
y<-c(1.7,"a")
y
y<-c(TRUE, 2)
y
read.csv(hw1_data.csv)
setwd(P)
setwd("~/")
setwd("P:/")
getwd()
read.csv(hw1_data.csv)
read.csv("hw1_data.csv")
setwd("P:/Coursera/Data Science/2_R_Programming")
read.csv("~/Courserahw1_data.csv")
read.csv("hw1_data.csv")
hw1_data<-read.csv("hw1_data.csv")
colnames(hw1_data)
hw1_data(1:2,*)
hw1_data([1:2])
hw1_data(1)
setwd("P:/Coursera/Data Science/2_R_Programming")
head(hw1_data)
hw1_data(row=c(1,2))
hw1_data[[row=c(1,2)]]
hw1_data[[1]]
hw1_data[[*,1]]
hw1_data[c(1,2),]
mean
mean?
esc
mean(?)
help(mean)
x<-1:10
x<-0
x<-1:10
if(x>5){
x<-0
}
dir..create(specdata)
dir.create(specdata)
specdata<-dir.create("specdata")
specdata
sprintf?
()
help(sprintf)
file_name <- sprintf("%0.3d.csv", specdata, 5))
file_name <- sprintf("%0.3d.csv", specdata, 5)
df<-read.csv(file_name)
file_name <- sprintf("%0.3d.csv", "Data_Sets/specdata", 5)
file_name <- sprintf("%0.3d.csv", Data_Sets/specdata, 5)
file_name <- sprintf("%0.3d.csv", "specdata"", 5)
file_name <- sprintf("%0.3d.csv", "specdata", 5)
file_name <- sprintf("%0.3d.csv", "specdata", 5)
file_name <- sprintf("%0.3d.csv", "specdata", 5)
df<-read.csv("Data_Sets/specdata/005.csv")
df
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("Data_Sets/specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("Data_Sets/specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/pollutantmean.R')
pollutantmean("Data_Sets/specdata","sulfate",1:10)
source('P:/Coursera/datasciencecoursera/Functions/pollutantmean.R')
id_nobs <- data.frame("id","nobs")
id_nobs
id_nobs <- data.frame(row.names=c("id","nobs"))
id_nobs
id_nobs <- data.frame(col.names=c("id","nobs"))
id_nobs
id_nobs <- data.frame(colnames(c("id","nobs")))
id_nobs
source('P:/Coursera/datasciencecoursera/Functions/complete.R')
complete("Data_Sets/specdata",1)
source('P:/Coursera/datasciencecoursera/Functions/complete.R')
source('P:/Coursera/datasciencecoursera/Functions/complete.R')
complete("Data_Sets/specdata",1)
source('P:/Coursera/datasciencecoursera/Functions/complete.R')
complete("Data_Sets/specdata",1)
source('P:/Coursera/datasciencecoursera/Functions/complete.R')
complete("Data_Sets/specdata",1)
source('P:/Coursera/datasciencecoursera/Functions/complete.R')
complete("Data_Sets/specdata",1)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",100)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",100)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",100)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",100)
help(cor)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
cr<-corr("Data_Sets/specdata",150)
head(cr)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
head(cr)
cr<-corr("Data_Sets/specdata",150)
head(cr)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
cr<-corr("Data_Sets/specdata",150)
head(cr)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
cr<-corr("Data_Sets/specdata",150)
head(cr)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
cr<-corr("Data_Sets/specdata",150)
head(cr)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
cr<-corr("Data_Sets/specdata",150)
corr("Data_Sets/specdata",150)
head(corr("Data_Sets/specdata",150))
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
head(corr("Data_Sets/specdata",150))
corr("Data_Sets/specdata",150)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",150)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",150)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",150)
debug(corr("Data_Sets/specdata",150))
corr("Data_Sets/specdata",150)
corr("Data_Sets/specdata",150)
corr("Data_Sets/specdata",150)
corr("Data_Sets/specdata",150)
corr("Data_Sets/specdata",150)
corr("Data_Sets/specdata",150)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",150)
complete_cases<-complete("Data_Sets/specdata")
complete[complete$id==275]
complete_cases[complete_cases$id==275]
complete_cases[complete_cases$id=275]
complete_cases[complete_cases$id=275]
complete_cases[complete_cases$id==275]
complete_cases
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",150)
cr<-corr("Data_Sets/specdata",150)
nrows(cr)
attributes(cr)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",150)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
corr("Data_Sets/specdata",150)
source('P:/Coursera/datasciencecoursera/Functions/corr.R')
cr<-corr("Data_Sets/specdata",150)
head(cr)
load(swirl)
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args(list.files
)
old.dir<-getdir
old.dir<-getwd
old.dir<-getwd()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
dir.create(file.path('testdir2','testdir3'),recursive=TRUE)
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0,10, by=.5)
myseq<- seq(5,10,length=30)
my_seq<- seq(5,10,length=30)
length(my_seq)
1:lenght(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
play()
rep(0)
next()
nxt()
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect<-c(.5,55,-10,6)
tf<- (num_vect<1)
tf<- num_vect<1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = "")
paste(my_char, collapse = " ")
c(my_char, "Kaci")
my_name <- c(my_char, "Kaci")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, a:4, sep = "-")
paste(LETTERS, 1:4, sep = "-")
x<- c(44, NA, 5, NA)
x*3
y<- rnorm(1000)
z<- rep(NA, 1000)
my_data<- sample(c(y,z), 100)
my_na<- is.na(my_data)
my_na
my_data== NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect<- c(11, 2, NA)
vect2<- c(11, 2, NA)
names(vect2)<- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector<- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_vector<- my_matrix
my_matrix <- my_vector
?matrix
my_matrix2<-matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, mymatrix)
cbind(patients, my_matrix)
my_data<-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6<7
10<=10
5!=7
!(5=7)
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 >8 || 6 != 8 && 4>3
5 >8 || 6 != 8 && 4>3.9
isTrue(6>4)
isTRUE6>4)
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
swirl()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags , class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat<- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
?apply
mean(mtcars$mpg, mtcars$cyl)
data(mtcars)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
setwd('P:/Coursera/statswithrcoursera')
getwd()
install.packages(devtools)
install.packages("devtools")
library(devtools)
install_github("StatsWithR/statsr")
install.packages("dplyr")
install.packages("ggplot2")
install_github("StatsWithR/statsr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("stringi",type="mac.binary")
install.packages("stringi",type="win.binary")
